# -*- coding: utf-8 -*-
"""CSST102 Housing and Iris - AGOJO.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/186qKU5cSxYhcI5GcvEmqbALGsgVseGak

# **Setup**
"""

import sklearn
from sklearn import datasets
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression, LinearRegression
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report, mean_squared_error, r2_score, mean_absolute_error
import pandas as pd
import numpy as np

"""# **Loading Dataset**"""

iris = load_iris(as_frame=True)
df = iris.frame

"""# **Dataset Exploration**"""

print(df.describe())
print("Target classes;", iris.target_names)

print(df['target'].value_counts())

"""# **Train Test Split & Baseline Model**"""

X = df[iris.feature_names]
y = iris.target

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = LogisticRegression(max_iter=200)
model.fit(X_train,y_train)

y_pred = model.predict(X_test)
print("Accuracy:", accuracy_score(y_test, y_pred))

"""# **Data Evaluation**"""

print(confusion_matrix(y_test, y_pred))
print(classification_report(y_test, y_pred))

"""# **Load Dataset**

"""

df = pd.read_csv("/content/housing.csv")
df.head()

"""# **Explore Dataset**"""

display(df.head())
display(df.info())
display(df.describe())

"""# **Train Test Split and Baseline Model**

"""

X = df.drop(['median_house_value', 'ocean_proximity'], axis=1)
y = df['median_house_value']

combined_df = pd.concat([X, y], axis=1).dropna()
X = combined_df.drop('median_house_value', axis=1)
y = combined_df['median_house_value']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = LinearRegression()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

"""# **Evaluating Data**"""

mse = mean_squared_error(y_test, y_pred)
rmse = np.sqrt(mse)
mae = mean_absolute_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("Model Evaluation:")
print(f"Mean Squared Error (MSE): {mse:.2f}")
print(f"Root Mean Squared Error (RMSE): {rmse:.2f}")
print(f"Mean Absolute Error (MAE): {mae:.2f}")
print(f"RÂ² Score: {r2:.4f}")