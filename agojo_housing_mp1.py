# -*- coding: utf-8 -*-
"""AGOJO Housing MP1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12r_nRdbAM6e1VzlCQyv0hwZESrRbaewj

# **1. Data Upload & Verification**
"""

import pandas as pd

df=pd.read_csv("housing.csv")

print(df.head(5))

print(df.info)

"""# **2. Dataset Exploration**"""

print(df.describe())

"""# **3. Data Visualization**"""

import matplotlib.pyplot as plt
import seaborn as sns

df.hist(figsize=(10, 8))
plt.tight_layout()
plt.show()

plt.figure(figsize=(10, 6))
sns.scatterplot(data=df, x="longitude", y="latitude", hue="median_house_value",
                size="population", alpha=0.4, palette="viridis")
plt.title("Housing Prices by Location and Population")
plt.show()

"""# **4. Regeression**"""

features = df.drop(['median_house_value', 'ocean_proximity'], axis=1)
target = df['median_house_value']

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.impute import SimpleImputer
import numpy as np

# Handle missing values using SimpleImputer
imputer = SimpleImputer(missing_values=np.nan, strategy='mean')
features_imputed = imputer.fit_transform(features)


X_train, X_test, y_train, y_test = train_test_split(features_imputed, target, test_size=0.2, random_state=42)

model = LinearRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)

mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Squared Error (MSE): {mse:.2f}")
print(f"R-squared (R2) Score: {r2:.2f}")